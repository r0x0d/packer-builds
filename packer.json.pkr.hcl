# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "disk_size" {
  type    = string
  default = "25G"
}

variable "password" {
  type    = string
  default = "vagrant"
}

variable "user" {
  type    = string
  default = "vagrant"
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "qemu" "centos-85-x86_64-uefi-vagrant" {
  accelerator      = "kvm"
  boot_command     = ["e<down><down><end><bs><bs><bs><bs><bs>inst.text inst.ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ks.cfg<leftCtrlOn>x<leftCtrlOff>"]
  boot_wait        = "5s"
  disk_compression = true
  disk_size        = "${var.disk_size}"
  format           = "qcow2"
  http_directory   = "http"
  iso_checksum     = "sha256:9602c69c52d93f51295c0199af395ca0edbe35e36506e32b8e749ce6c8f5b60a"
  iso_url          = "https://vault.centos.org/8.5.2111/isos/x86_64/CentOS-8.5.2111-x86_64-boot.iso"
  machine_type     = "q35"
  firmware         = "/usr/share/edk2/ovmf/OVMF_CODE.fd"
  use_pflash       = false
  qemuargs         = [
    ["-cpu", "host"],
    ["-m", "1024"],
    ["-smp", "2"],
    ["-device", "virtio-scsi"],
    ["-device", "scsi-hd,drive=drive0,bootindex=0"],
    ["-device","scsi-cd,drive=cdrom0,bootindex=1"],
    [
      "-drive",
      "if=none,file=output-centos-85-x86_64-uefi-vagrant/packer-centos-85-x86_64-uefi-vagrant,id=drive0,cache=writeback,discard=ignore,format=qcow2"
    ],
    [
      "-drive",
      "if=none,file=/home/r0x0d/.cache/packer/5e04f3876e895e56107d26fda21b815277f4374f.iso,id=cdrom0,media=cdrom"
    ],
  ]
  shutdown_command = "echo '${var.password}'|sudo -S shutdown -P now"
  ssh_password     = "${var.password}"
  ssh_timeout      = "10m"
  ssh_username     = "${var.user}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.qemu.centos-85-x86_64-uefi-vagrant"]

  post-processor "vagrant" {
    // include              = ["vm/centos-8.5-uefi.qcow2"]
    provider_override    = "libvirt"
    vagrantfile_template = "/home/r0x0d/Workspace/research/packer/Vagrantfile"
    keep_input_artifact  = true
  }
}
