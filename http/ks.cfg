# Adapted from https://github.com/casparderksen/packer-kickstart-vagrant/blob/master/http/centos8-basebox.ks

# Use network installation
url --url="http://vault.centos.org/centos/8/BaseOS/x86_64/os/"
repo --name="AppStream" --baseurl=https://vault.centos.org/centos/8/AppStream/x86_64/os/
repo --name="BaseOS" --baseurl=https://vault.centos.org/centos/8/BaseOS/x86_64/os/

# Peform installation
text
firstboot --disable

# Bootloader
bootloader --timeout=0 --location=boot --append="rhgb quiet crashkernel=auto"

# Define language and timezone settings
lang en_US.UTF-8
keyboard us
timezone --utc UTC

# Remove all partitions
zerombr
clearpart --all --initlabel

# Set SELinux state of installed system
selinux --enforcing

# Set firewall configuration
firewall --disabled

# Network information
network --hostname=localhost.localdomain --bootproto=dhcp --device=link --activate

# Define authentication settings
authselect --enableshadow --passalgo=sha512 --kickstart

# Set root password (=vagrant)
rootpw --iscrypted $6$ac/ediK21th2HoRZ$9Y38Cpk9ESK9p7oAJCqhuEyNi7X.weamiG/3f/H4TGvlzrDWeoPA319uULJXIGRhYVKbf.jm5GrzTn7ZEC7fe.

# Add vagrant user in group wheel for sudo
user --name=vagrant --uid=1000 --gid=1000 --password=vagrant --groups=wheel

# Automatically create partitions using LVM
autopart --type=lvm

# Reboot after successful installation
reboot

%packages
@core
vim
bash-completion
man-pages
bzip2
rsync
chrony
python3
python3-pip
openssh-server
openssh-clients
-aic94xx-firmware
-alsa*
-dracut-config-rescue
-iprutils
-ivtv-firmware
-iwl*-firmware
-kexec-tools	
-libertas*-firmware
-microcode_ctl
-plymouth*
-postfix
# Don't build rescue initramfs
-dracut-config-rescue
%end

# kdump needs to reserve 160MB + 2bits/4kB RAM, and automatic allocation only
# works on systems with at least 2GB RAM (which excludes most Vagrant boxes)
# CBS doesn't support %addon yet https://bugs.centos.org/view.php?id=12169
%addon com_redhat_kdump --disable
%end

%post --log=/tmp/ks-post.log

# Disable quiet boot and splash screen
sed --follow-symlinks -i "s/ rhgb quiet//" /etc/default/grub
sed --follow-symlinks -i "s/ rhgb quiet//" /boot/grub2/grubenv

# Configure locale (prevent 'can't set the locale' errors from ssh connection)
cat >> /etc/environment << EOF
LC_ALL=en_US.utf-8
EOF

# Setup sudoers (no password for wheel group; we've added vagrant to wheel)
cat > /etc/sudoers.d/local << EOF
Defaults:%wheel env_keep += "SSH_AUTH_SOCK"
Defaults:%wheel !requiretty
vagrant ALL=(ALL) NOPASSWD: ALL
%wheel ALL=(ALL) NOPASSWD: ALL
EOF
chmod 0440 /etc/sudoers.d/local

# Passwordless sudo for the user 'vagrant'
echo "NM_CONTROLLED=no" >> /etc/sysconfig/network-scripts/ifcfg-ens3

# sshd: disable DNS checks
ex -s /etc/ssh/sshd_config <<EOF
:%substitute/^#\(UseDNS\) yes$/&\r\1 no/
:update
:quit
EOF

# Decrease connection time by preventing reverse DNS lookups
# (see https://lists.centos.org/pipermail/centos-devel/2016-July/014981.html
#  and man sshd for more information)
cat >>/etc/sysconfig/sshd <<EOF
OPTIONS="-u0"
EOF

# Setup ssh keys for vagrant user
mkdir -m 0700 -p /home/vagrant/.ssh
curl https://raw.githubusercontent.com/hashicorp/vagrant/main/keys/vagrant.pub > /home/vagrant/.ssh/authorized_keys
chmod 600 /home/vagrant/.ssh/authorized_keys
chown -R vagrant:vagrant /home/vagrant/.ssh

# Setup ssh keys for root user
mkdir -m 0700 -p /root/.ssh
curl https://raw.githubusercontent.com/hashicorp/vagrant/main/keys/vagrant.pub > /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys

# # Fix the SELinux context of the new files
# restorecon -f - <<EOF
# /etc/sudoers.d/vagrant
# /etc/dracut.conf.d/nofloppy.conf
# EOF

# # Rerun dracut for the installed kernel (not the running kernel):
# KERNEL_VERSION=$(rpm -q kernel --qf '%{version}-%{release}.%{arch}\n')
# dracut -f /boot/initramfs-${KERNEL_VERSION}.img ${KERNEL_VERSION}

# Installing ansible
pip install ansible

# Generate grub2-efi.cfg
/usr/sbin/grub2-mkconfig -o /etc/grub2-efi.cfg
/usr/sbin/parted -s /dev/vda disk_set pmbr_boot off

# Setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target
echo .

# Cleanup
yum clean all
rm -rf /etc/ssh/ssh_host_*
rm -rf /etc/udev/rules.d/70-*
rm -f /root/.bash_history
rm -f /home/vagrant/.bash_history
%end

